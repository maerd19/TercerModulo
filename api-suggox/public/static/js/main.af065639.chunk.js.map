{"version":3,"sources":["config.js","auth/index.jsx","core/Menu.jsx","core/Layout.jsx","user/Signup.jsx","user/Signin.jsx","core/Home.jsx","auth/PrivateRoute.jsx","user/UserDashboard.jsx","auth/AdminRoute.jsx","user/AdminDashboard.jsx","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","className","style","to","user","role","cursor","onClick","next","removeItem","fetch","method","then","response","console","log","catch","err","signout","push","Layout","title","description","children","Signup","useState","name","email","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","preventDefault","headers","Accept","body","stringify","json","data","display","onChange","type","Signin","loading","redirectToReferrer","signin","setItem","authenticate","Home","PrivateRoute","Component","component","rest","render","props","state","from","Dashboard","_id","AdminRoute","AdminDashboard","Routes","exact","ReactDOM","document","getElementById"],"mappings":"sOAAaA,EAAMC,4BC0ENC,EAAkB,WAC3B,MAAqB,oBAAVC,WAGPC,aAAaC,QAAQ,QACdC,KAAKC,MAAMH,aAAaC,QAAQ,UC1EzCG,EAAW,SAACC,EAASC,GAAV,OAAoBD,EAAQE,SAASC,WAAaF,EAAQ,CAAEG,MAAO,QAAW,CAAEA,MAAO,SAkFzFC,eA/EF,SAAC,GAAD,IAAGL,EAAH,EAAGA,QAAH,OACT,6BACI,wBAAIM,UAAU,2BACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOR,EAASC,EAAS,KACzBQ,GAAG,KAHP,SASHf,KAAqD,IAAhCA,IAAkBgB,KAAKC,MACzC,wBAAIJ,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOR,EAASC,EAAS,mBACzBQ,GAAG,mBAHP,cAUPf,KAAqD,IAAhCA,IAAkBgB,KAAKC,MACzC,wBAAIJ,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOR,EAASC,EAAS,oBACzBQ,GAAG,oBAHP,eAUNf,KACE,kBAAC,WAAD,KACI,wBAAIa,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOR,EAASC,EAAS,WACzBQ,GAAG,WAHP,WASJ,wBAAIF,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVC,MAAOR,EAASC,EAAS,WACzBQ,GAAG,WAHP,YAWXf,KACG,wBAAIa,UAAU,YACV,0BACIA,UAAU,WACVC,MAAO,CAACI,OAAQ,UAAWP,MAAO,QAClCQ,QAAS,kBDjBV,SAAAC,GACnB,GAAsB,qBAAXnB,OAKP,OAHAC,aAAamB,WAAW,OACxBD,IAEOE,MAAM,GAAD,OAAIxB,EAAJ,YAAmB,CAC3ByB,OAAQ,QAEPC,MAAK,SAAAC,GACFC,QAAQC,IAAI,UAAWF,MAE1BG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MCKCC,EAAQ,WAEnBvB,EAAQwB,KAAK,UALrB,iBClDLC,EAhBA,SAAC,GAAD,QACXC,aADW,MACH,QADG,MAEXC,mBAFW,MAEG,cAFH,EAGXrB,EAHW,EAGXA,UACAsB,EAJW,EAIXA,SAJW,OAMX,6BACI,kBAAC,EAAD,MACA,yBAAKtB,UAAU,aACX,4BAAKoB,GACL,uBAAGpB,UAAU,QAAQqB,IAEzB,yBAAKrB,UAAWA,GAAYsB,K,ykBCXpC,IA+GeC,EA/GA,WAAO,IAAD,EACWC,mBAAS,CACjCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,SAAS,IANI,mBACVC,EADU,KACFC,EADE,KAUTN,EAA0CK,EAA1CL,KAAMC,EAAoCI,EAApCJ,MAAOC,EAA6BG,EAA7BH,SAAUE,EAAmBC,EAAnBD,QAASD,EAAUE,EAAVF,MAGlCI,EAAe,SAAAP,GAAI,OAAI,SAAAQ,GACzBF,EAAU,EAAD,GAAMD,EAAN,aAAcF,OAAO,GAAQH,EAAOQ,EAAMC,OAAOC,WAGxDC,EAAc,SAAAH,GHpBF,IAAA9B,EGqBd8B,EAAMI,iBACNN,EAAU,EAAD,GAAMD,EAAN,CAAcF,OAAO,MHtBhBzB,EGyBP,CAAEsB,OAAMC,QAAOC,YHvBnBlB,MAAM,GAAD,OAAIxB,EAAJ,WAAkB,CAC1ByB,OAAQ,OACR4B,QAAS,CAGLC,OAAQ,mBAER,eAAgB,oBAGpBC,KAAMjD,KAAKkD,UAAUtC,KAKpBQ,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OGKXL,MAAK,SAAAgC,GACEA,EAAKf,MAELG,EAAU,EAAD,GAAMD,EAAN,CAAcF,MAAOe,EAAKf,MAAOC,SAAS,KAGnDE,EAAU,EAAD,GACFD,EADE,CAELL,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,SAAS,SA8D7B,OACI,kBAAC,EAAD,CACIT,MAAM,SACNC,YAAY,mBACZrB,UAAU,kCAZd,yBACIA,UAAU,mBACVC,MAAO,CAAE2C,QAASf,EAAU,GAAK,SAFrC,kCAImC,kBAAC,IAAD,CAAM3B,GAAG,WAAT,WAbnC,yBACIF,UAAU,qBACVC,MAAO,CAAE2C,QAAShB,EAAQ,GAAK,SAE9BA,GA1CL,8BACI,yBAAK5B,UAAU,cACX,2BAAOA,UAAU,cAAjB,QACA,2BACI6C,SAAUb,EAAa,QACvBc,KAAK,OACL9C,UAAU,eACVmC,MAAOV,KAIf,yBAAKzB,UAAU,cACX,2BAAOA,UAAU,cAAjB,SACA,2BACI6C,SAAUb,EAAa,SACvBc,KAAK,QACL9C,UAAU,eACVmC,MAAOT,KAIf,yBAAK1B,UAAU,cACX,2BAAOA,UAAU,cAAjB,YACA,2BACI6C,SAAUb,EAAa,YACvBc,KAAK,WACL9C,UAAU,eACVmC,MAAOR,KAIf,4BAAQrB,QAAS8B,EAAapC,UAAU,mBAAxC,a,ykBC1EZ,IAmHe+C,EAnHA,WAAO,IAAD,EACWvB,mBAAS,CACjCE,MAAO,oBACPC,SAAU,SACVC,MAAO,GAEPoB,SAAS,EAGTC,oBAAoB,IATP,mBACVnB,EADU,KACFC,EADE,KAaTL,EAAwDI,EAAxDJ,MAAOC,EAAiDG,EAAjDH,SAAUqB,EAAuClB,EAAvCkB,QAASpB,EAA8BE,EAA9BF,MAAOqB,EAAuBnB,EAAvBmB,mBACjC9C,EAAShB,IAATgB,KAEF6B,EAAe,SAAAP,GAAI,OAAI,SAAAQ,GACzBF,EAAU,KAAKD,EAAN,aAAcF,OAAO,GAAQH,EAAOQ,EAAMC,OAAOC,WAGxDC,EAAc,SAAAH,GAChBA,EAAMI,iBACNN,EAAU,KAAKD,EAAN,CAAcF,OAAO,EAAOoB,SAAS,KJChC,SAAA7C,GAClB,OAAOM,MAAM,GAAD,OAAIxB,EAAJ,WAAkB,CAC1ByB,OAAQ,OACR4B,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMjD,KAAKkD,UAAUtC,KAEpBQ,MAAK,SAAAC,GACF,OAAOA,EAAS8B,UAEnB3B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,MIbhBkC,CAAO,CAAExB,QAAOC,aAAYhB,MAAK,SAAAgC,GACzBA,EAAKf,MAELG,EAAU,KAAKD,EAAN,CAAcF,MAAOe,EAAKf,MAAOoB,SAAS,KJevC,SAACL,EAAMpC,GAET,qBAAXnB,SAEPC,aAAa8D,QAAQ,MAAO5D,KAAKkD,UAAUE,IAE3CpC,KIjBQ6C,CAAaT,GAAM,WACfZ,EAAU,KACHD,EADE,CAELmB,oBAAoB,YAoExC,OACI,kBAAC,EAAD,CACI7B,MAAM,SACNC,YAAY,kBACZrB,UAAU,kCA3BdgD,GACI,yBAAKhD,UAAU,oBACX,2CAZR,yBACIA,UAAU,qBACVC,MAAO,CAAE2C,QAAShB,EAAQ,GAAK,SAE9BA,GA/BL,8BACI,yBAAK5B,UAAU,cACX,2BAAOA,UAAU,cAAjB,SACA,2BACI6C,SAAUb,EAAa,SACvBc,KAAK,QACL9C,UAAU,eACVmC,MAAOT,KAIf,yBAAK1B,UAAU,cACX,2BAAOA,UAAU,cAAjB,YACA,2BACI6C,SAAUb,EAAa,YACvBc,KAAK,WACL9C,UAAU,eACVmC,MAAOR,KAGf,4BAAQrB,QAAS8B,EAAapC,UAAU,mBAAxC,WAwBAiD,EACI9C,GAAsB,IAAdA,EAAKC,KAIN,kBAAC,IAAD,CAAUF,GAAG,qBAGb,kBAAC,IAAD,CAAUA,GAAG,oBAGxBf,IACO,kBAAC,IAAD,CAAUe,GAAG,WADxB,IC5FOmD,EANF,kBACT,kBAAC,EAAD,CAAQjC,MAAM,YAAYC,YAAY,UAAtC,Q,QCkBWiC,EAlBM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCACjB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAC,GAAK,OACTxE,IACI,kBAACoE,EAAcI,GAEf,kBAAC,IAAD,CACIzD,GAAI,CACAL,SAAU,UACV+D,MAAO,CAAEC,KAAMF,EAAM/D,kBC4D9BkE,EArEG,WAAM,MAEyB3E,IAArCgB,KAAasB,GAFD,EAEJsC,IAFI,EAECtC,MAAMC,EAFP,EAEOA,MAAOtB,EAFd,EAEcA,KAkDlC,OACI,kBAAC,EAAD,CACIgB,MAAM,YACNC,YAAW,+BAA0BI,EAA1B,KACXzB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SArDnB,yBAAKA,UAAU,QACX,wBAAIA,UAAU,eAAd,cACA,wBAAIA,UAAU,cAMV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,mBAA9B,8BA6CR,yBAAKF,UAAU,SAjCnB,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,0BACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBAAmByB,GACjC,wBAAIzB,UAAU,mBAAmB0B,GACjC,wBAAI1B,UAAU,mBACA,IAATI,EAAa,QAAU,wBASpC,yBAAKJ,UAAU,aAEX,wBAAIA,UAAU,eAAd,2BACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBAAd,iBC7BLgE,EAlBI,SAAC,GAAD,IAAcT,EAAd,EAAGC,UAAyBC,EAA5B,oCACf,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAC,GAAK,OACTxE,KAAqD,IAAhCA,IAAkBgB,KAAKC,KACxC,kBAACmD,EAAcI,GAEf,kBAAC,IAAD,CACIzD,GAAI,CACAL,SAAU,UACV+D,MAAO,CAAEC,KAAMF,EAAM/D,kBC8C9BqE,EAvDQ,WAAO,IAAD,EAGrB9E,IADAgB,KAAasB,GAFQ,EAEbsC,IAFa,EAERtC,MAAMC,EAFE,EAEFA,MAAOtB,EAFL,EAEKA,KAuC9B,OACI,kBAAC,EAAD,CACIgB,MAAM,YACNC,YAAW,+BAA0BI,EAA1B,KACXzB,UAAU,mBAEV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SAzCnB,yBAAKA,UAAU,QACX,wBAAIA,UAAU,eAAd,eACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,oBAA9B,qBAsCR,yBAAKF,UAAU,SArBnB,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,0BACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBAAmByB,GACjC,wBAAIzB,UAAU,mBAAmB0B,GACjC,wBAAI1B,UAAU,mBACA,IAATI,EAAa,QAAU,4BCFjC8D,EA1BA,WACX,OAEI,kBAAC,IAAD,KAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOvE,KAAK,IAAIwE,OAAK,EAACX,UAAWH,IACjC,kBAAC,IAAD,CAAO1D,KAAK,UAAUwE,OAAK,EAACX,UAAWT,IACvC,kBAAC,IAAD,CAAOpD,KAAK,UAAUwE,OAAK,EAACX,UAAWjC,IAEvC,kBAAC,EAAD,CACI5B,KAAK,kBACLwE,OAAK,EACLX,UAAWM,IAGf,kBAAC,EAAD,CACInE,KAAK,mBACLwE,OAAK,EACLX,UAAWS,OC1B/BG,IAASV,OAAO,kBAAC,EAAD,MAAYW,SAASC,eAAe,W","file":"static/js/main.af065639.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","import { API } from \"../config\";\n\n// As parameter we receive an object\nexport const signup = user => {\n    // To send data to the backend fetch can be used\n    return fetch(`${API}/signup`, {\n        method: \"POST\",\n        headers: {\n            // When we make a post request the API will respond with the JSON data.\n            // We need to maje sure that we accept the application/json\n            Accept: \"application/json\",\n            // Content type indicates what sort of content type we're sending with the push to request it\n            \"Content-Type\": \"application/json\"\n        },\n        // stringify is used to convert the object in a JSON string \n        body: JSON.stringify(user)\n    })\n    // When the fetch is make we will either get a successful response or an error to handle\n\n        // Sucessful response\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const signin = user => {\n    return fetch(`${API}/signin`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n// Store data in localStorage\nexport const authenticate = (data, next) => {\n    // if we have access to the windows object\n    if (typeof window !== \"undefined\") {\n        // name of field, value of field\n        localStorage.setItem(\"jwt\", JSON.stringify(data));\n        // This will be a callback function\n        next();\n    }\n};\n\n// This function will take a callback that will be used to update the state and redirect the user\nexport const signout = next => {\n    if (typeof window !== \"undefined\") {\n        // remove jwt from localStorage \n        localStorage.removeItem(\"jwt\");\n        next();\n        // request to back end to log out the user\n        return fetch(`${API}/signout`, {\n            method: \"GET\"\n        })\n            .then(response => {\n                console.log(\"signout\", response);\n            })\n            .catch(err => console.log(err));\n    }\n};\n\n// Validate if user is authenticated\nexport const isAuthenticated = () => {\n    if (typeof window == \"undefined\") {\n        return false;\n    }\n    if (localStorage.getItem(\"jwt\")) {\n        return JSON.parse(localStorage.getItem(\"jwt\"));\n    } else {\n        return false;\n    }\n};\n","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { signout, isAuthenticated } from '../auth';\n\n// history will hold the path of an URI\nconst isActive = (history, path) => (history.location.pathname === path) ? { color: \"#f90\" } : { color: \"#fff\" };\n\n// we can access to history through the props that come from react-router-dom because we use withRouter\nconst Menu = ({ history }) => (\n    <div>\n        <ul className=\"nav nav-tabs bg-primary\">\n            <li className=\"nav-item\">\n                <Link\n                    className=\"nav-link\"\n                    style={isActive(history, \"/\")}\n                    to=\"/\"\n                >\n                    Home\n                </Link>\n            </li>\n\n            {isAuthenticated() && isAuthenticated().user.role === 0 && (\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/user/dashboard\")}\n                        to=\"/user/dashboard\"\n                    >\n                        Dashboard\n                    </Link>\n                </li>\n            )}\n\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/admin/dashboard\")}\n                        to=\"/admin/dashboard\"\n                    >\n                        Dashboard\n                    </Link>\n                </li>\n            )}\n\n            {!isAuthenticated() && (\n                <Fragment>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            style={isActive(history, \"/signin\")}\n                            to=\"/signin\"\n                        >\n                            Signin\n                        </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            style={isActive(history, \"/signup\")}\n                            to=\"/signup\"\n                        >\n                            Signup\n                        </Link>\n                    </li>\n                </Fragment>\n            )}\n\n            {isAuthenticated() && (\n                <li className=\"nav-item\">\n                    <span\n                        className=\"nav-link\"\n                        style={{cursor: 'pointer', color: '#fff'}}\n                        onClick={() => signout(() => {\n                            // send the user to the home page\n                            history.push('/');\n                        })}\n                    >\n                        Signout\n                    </span>\n                </li>\n            )}\n        </ul>\n    </div>\n);\n\nexport default withRouter(Menu);","// The layout will be used for the entire application\nimport React from \"react\";\nimport Menu from \"./Menu\";\n\n// Default values for props that are not sent\nconst Layout = ({\n    title = \"Title\",\n    description = \"Description\",\n    className,\n    children\n}) => (\n    <div>\n        <Menu />\n        <div className=\"jumbotron\">\n            <h2>{title}</h2>\n            <p className=\"lead\">{description}</p>\n        </div>\n        <div className={className}>{children}</div>\n    </div>\n);\n\nexport default Layout;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\n// Since the file in signup is index is not necessary to explicitly place it in the export\nimport { signup } from \"../auth\";\n\nconst Signup = () => {\n    const [values, setValues] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        error: \"\",\n        success: false\n    });\n\n    // Values destructured from the state\n    const { name, email, password, success, error } = values;\n\n    // Higher Order Function: A function that returns another function\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false });\n        // Grab the name, email & pass them to send to back end as an OBJECT{}\n        // { name : name, email : email, password : password }\n        signup({ name, email, password })\n            .then(data => {\n                if (data.error) {\n                    // store the error from the back end in the state\n                    setValues({ ...values, error: data.error, success: false });\n                } else {\n                    // clear the fields\n                    setValues({\n                        ...values,\n                        name: \"\",\n                        email: \"\",\n                        password: \"\",\n                        error: \"\",\n                        success: true\n                    });\n                }\n            });\n    };\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input\n                    onChange={handleChange(\"name\")}\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={name}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input\n                    onChange={handleChange(\"email\")}\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={email}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input\n                    onChange={handleChange(\"password\")}\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={password}\n                />\n            </div>\n            {/* When button is clicked a new user is sent to backend */}\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    const showError = () => (\n        <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n        >\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div\n            className=\"alert alert-info\"\n            style={{ display: success ? \"\" : \"none\" }}\n        >\n            New account is created. Please <Link to=\"/signin\">Signin</Link>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Signup\"\n            description=\"Signup to Suggox\"\n            className=\"container col-md-8 offset-md-2\"\n        >\n            {showSuccess()}\n            {showError()}\n            {signUpForm()}\n            {/* {JSON.stringify(values)} */}\n        </Layout>\n    );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\n\nconst Signin = () => {\n    const [values, setValues] = useState({\n        email: \"correo@correo.com\",\n        password: \"123456\",\n        error: \"\",\n        // loading will be used to show something to the user while logging in\n        loading: false,\n        // When user successfully signs in it will change to true and when its true we will redirect the user\n        // to the homepage\n        redirectToReferrer: false\n    });\n\n    // values destructured from the state\n    const { email, password, loading, error, redirectToReferrer } = values;\n    const { user } = isAuthenticated();\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false, loading: true });\n        signin({ email, password }).then(data => {\n            if (data.error) {\n                // if log in fails loading goes back to false\n                setValues({ ...values, error: data.error, loading: false });\n            } else {\n                // authenticate is a middleware that will store the jwt in localStorage\n                // a callback fn() will be executed after storing values in localStorage\n                authenticate(data, () => {\n                    setValues({\n                        ...values,\n                        redirectToReferrer: true\n                    });\n                });\n            }\n        });\n    };\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input\n                    onChange={handleChange(\"email\")}\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={email}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input\n                    onChange={handleChange(\"password\")}\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={password}\n                />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    const showError = () => (\n        <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n        >\n            {error}\n        </div>\n    );\n\n    // If loading is true we will display loading...\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-info\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToReferrer) {\n            if (user && user.role === 1) {\n                // Redirect is imported from react-router-dom\n\n                // Redirect to admin dashboard when signin in if it is admin\n                return <Redirect to=\"/admin/dashboard\" />;\n            } else {\n                // Redirect to user dashboard when signin in\n                return <Redirect to=\"/user/dashboard\" />;\n            }              \n        }\n        if (isAuthenticated()) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n\n    return (\n        <Layout\n            title=\"Signin\"\n            description=\"Signin to Sugox\"\n            className=\"container col-md-8 offset-md-2\"\n        >\n            {showLoading()}\n            {showError()}\n            {signUpForm()}\n            {redirectUser()}\n        </Layout>\n    );\n};\n\nexport default Signin;\n","import React from \"react\";\nimport Layout from \"./Layout\";\n\nconst Home = () => (\n    <Layout title=\"Home Page\" description=\"Suggox\">\n        ...\n    </Layout>\n);\n\nexport default Home;","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\n\nconst Dashboard = () => {\n    // Nested destructuring :O\n    const { user: { _id, name, email, role } } = isAuthenticated();\n\n    const userLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User Links</h4>\n                <ul className=\"list-group\">\n                    {/* <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">\n                            My Cart\n                        </Link>\n                    </li> */}\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/profile/update\">\n                            {/* Update Profile */}\n                            Actualizar Informacion\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    const userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Informacion de usuario</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">\n                        {role === 1 ? \"Admin\" : \"Usuario Registrado\"}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    const purchaseHistory = () => {\n        return (\n            <div className=\"card mb-5\">\n                {/* <h3 className=\"card-header\">Purchase history</h3> */}\n                <h3 className=\"card-header\">Historial de respuestas</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">history</li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Dashboard\"\n            description={`Bienvenido a Suggox, ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">{userLinks()}</div>\n                <div className=\"col-9\">\n                    {userInfo()}\n                    {purchaseHistory()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default AdminRoute;\n","import React from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminDashboard = () => {\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n\n    const adminLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">Admin Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/create/category\">\n                            {/* Create Category */}\n                            Create Survey\n                        </Link>\n                    </li>\n                    {/* <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/create/product\">\n                            Create Product\n                        </Link>\n                    </li> */}\n                </ul>\n            </div>\n        );\n    };\n\n    const adminInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Informacion de usuario</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">\n                        {role === 1 ? \"Admin\" : \"Usuario Registrado\"}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Dashboard\"\n            description={`Bienvenido a Suggox, ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">{adminLinks()}</div>\n                <div className=\"col-9\">{adminInfo()}</div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AdminDashboard;\n","import React from \"react\";\n// BrowserRouter is a component. It will make the props availale to other nested components\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Signup from \"./user/Signup\";\nimport Signin from \"./user/Signin\";\nimport Home from \"./core/Home\";\nimport PrivateRoute from \"./auth/PrivateRoute\";\nimport Dashboard from \"./user/UserDashboard\";\nimport AdminRoute from \"./auth/AdminRoute\";\nimport AdminDashboard from \"./user/AdminDashboard\";\n\nconst Routes = () => {\n    return (\n        // BrowserRouter will make the props available in all components inside of Switch\n        <BrowserRouter>\n            {/* Inside Switch we will have all the routes */}\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/signin\" exact component={Signin} />\n                <Route path=\"/signup\" exact component={Signup} />\n                {/* PrivateRoute will protect route only for the logged in users */}\n                <PrivateRoute \n                    path='/user/dashboard' \n                    exact \n                    component={Dashboard} \n                />\n                {/* PrivateRoute will protect route only for the admin logged in users */}\n                <AdminRoute \n                    path='/admin/dashboard' \n                    exact \n                    component={AdminDashboard} \n                />\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n"],"sourceRoot":""}